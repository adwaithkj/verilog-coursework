$date
	Sun Feb 20 10:22:27 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module rca_testbench $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % cin $end
$scope module dut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( s [3:0] $end
$var wire 1 " c3 $end
$var wire 1 ) c2 $end
$var wire 1 * c1 $end
$var wire 1 + c0 $end
$scope module f0 $end
$var wire 1 % a $end
$var wire 1 , b $end
$var wire 1 - ca $end
$var wire 1 + carry $end
$var wire 1 . w3 $end
$var wire 1 / w2 $end
$var wire 1 0 w1 $end
$var wire 1 1 sum $end
$scope module h1 $end
$var wire 1 % a $end
$var wire 1 , b $end
$var wire 1 / ca $end
$var wire 1 0 sum $end
$upscope $end
$scope module h2 $end
$var wire 1 0 a $end
$var wire 1 - b $end
$var wire 1 . ca $end
$var wire 1 1 sum $end
$upscope $end
$upscope $end
$scope module f1 $end
$var wire 1 + a $end
$var wire 1 2 b $end
$var wire 1 3 ca $end
$var wire 1 * carry $end
$var wire 1 4 w3 $end
$var wire 1 5 w2 $end
$var wire 1 6 w1 $end
$var wire 1 7 sum $end
$scope module h1 $end
$var wire 1 + a $end
$var wire 1 2 b $end
$var wire 1 5 ca $end
$var wire 1 6 sum $end
$upscope $end
$scope module h2 $end
$var wire 1 6 a $end
$var wire 1 3 b $end
$var wire 1 4 ca $end
$var wire 1 7 sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 * a $end
$var wire 1 8 b $end
$var wire 1 9 ca $end
$var wire 1 ) carry $end
$var wire 1 : w3 $end
$var wire 1 ; w2 $end
$var wire 1 < w1 $end
$var wire 1 = sum $end
$scope module h1 $end
$var wire 1 * a $end
$var wire 1 8 b $end
$var wire 1 ; ca $end
$var wire 1 < sum $end
$upscope $end
$scope module h2 $end
$var wire 1 < a $end
$var wire 1 9 b $end
$var wire 1 : ca $end
$var wire 1 = sum $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 ) a $end
$var wire 1 > b $end
$var wire 1 ? ca $end
$var wire 1 " carry $end
$var wire 1 @ w3 $end
$var wire 1 A w2 $end
$var wire 1 B w1 $end
$var wire 1 C sum $end
$scope module h1 $end
$var wire 1 ) a $end
$var wire 1 > b $end
$var wire 1 A ca $end
$var wire 1 B sum $end
$upscope $end
$scope module h2 $end
$var wire 1 B a $end
$var wire 1 ? b $end
$var wire 1 @ ca $end
$var wire 1 C sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1C
1B
0A
0@
0?
1>
1=
0<
0;
0:
19
08
07
06
05
04
03
02
11
00
0/
0.
1-
0,
0+
0*
0)
b1101 (
b101 '
b1000 &
0%
b101 $
b1000 #
0"
b1101 !
$end
#80
